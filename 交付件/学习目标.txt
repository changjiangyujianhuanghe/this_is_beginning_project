1. 拓展知识面，了解互联网常用技术&知识点，通过这些技术解决了哪些问题，相关设计思想和经验；大概清楚

   --- 目标达成：给你一个互联网需要设计的东西，你大概知道用哪些技术去实现，如何设计

2. 掌握分布式开发技术
  
   --- 目标达成：什么是分布式开发（RPC），哪些技术涉及到分布式开发（dubbo,hadoop,zookeeper：分布式数据协调，选举，负载均衡，核心就是发节点的发布订阅机制），分布式开发解决了哪些问题

3. 结合之前的项目经验，现在的学习内容哪些能够结合当时的业务场景去做优化，为啥做优化
  
   a. x-du开发管理可视化web系统
      
      目标达成：借助nginx和keepalived实现高可用避免tomcat服务器出现单点，借助dubbo实现一个大系统下面小系统之间微服务的互相调用，借助zookeeper实现微服务的HA（微服务避免出现单点），同时dubbo

                提供restful功能，某一个微服务不仅对内可以实现RPC远程调用，对外也可以提供restful接口，做到了服务的复用，不用再写一套restful服务去对外开放了

   b. 数据库（sql数据库，Nosql数据库）

      目标达成：待补充

   c. 分布式构建系统

      背景：路由器单形态代码量15G左右，组合全量形态代码量32G，构建这么大一个系统，单独编译机需要4-5小时才能完成全量的编译打包

            通过分布式构建系统实现多台编译机并行化编译子模块（mapper），然后再组装成一个全形态大包（reduce）编译时间可以优化到15分钟

            这个就和hadoop的分布式计算模型很像（map-reduce），hadoop离线计算，storm实时计算

      目标实现：

            



